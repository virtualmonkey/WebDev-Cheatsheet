@import url('https://fonts.googleapis.com/css?family=Unica+One|Vollkorn');

body {
  font-size: 1rem;
  text-align: center;
  font-family: 'Vollkorn';
  line-height: 1.4;
  color: rgba(black, .7);
}

h1, h2, h3, h4, h5 {
  font-family: 'Vollkorn's;
  text-transform: uppercase;
  line-height: .9;
  color: #c31;
}

h2 {
  margin-top: 1.2em;
  margin-bottom: 0;
}

p {
  margin-top: .25em;
}

a {
  color: red;
}

.intro {
  font-size: 5rem;
}


blockquote {
  font-size: 2rem;
  color: rgba(black, 1);
}

/* With before and after pseudo-elemts you can add blockquotes*/
blockquote::before {
  content: open-quote;
}

blockquote::after {
  content: close-quote;
}

/* Set the position of all the a elements with relative to plase the pseudoelements as absolute relative to this*/
a[data-tool-tip] {
  position: relative;
}

/* Generate a data-too-tip pseudo-element that displays after it*/
a[data-tool-tip]::after {
  content: attr(data-tool-tip);
  display: block;
  position: absolute;
  background-color: rgba(black, .7);
  padding: 1em 3em;
  color: white;
  border-radius: 5px;
  font-size: .8em;
  bottom: 0;
  left: 0;
  white-space: nowrap;
  transform: scale(0);
  transition:
    transform ease-out 150ms,
    bottom ease-out 150ms;
}

/* Increase the scale of the pseudoelement and elevate it all the way to the top */
a[data-tool-tip]:hover::after {
  transform: scale(1);
  bottom: 100%;
}

.decorations {
  padding: 7em;
}

.section-with-deco::before {
  font-family: 'Font Awesome 5 Free';
  font-weight: 900;
  content: '\f0e7';
  display: block;
  margin-bottom: 5px;
}

a[href$=".pdf"]::after {
  font-family: 'Font Awesome 5 Free';
  content: ' \f1c1'
}

a[href^="http"]::after {
  font-family: 'Font Awesome 5 Free';
  content: ' \f35d';
  font-weight: 900;
  font-size: .8em;
}

.counters {
  background: lightgray;
  text-align: left;
  padding: 5em 8em;
  margin-top: 7em;
  
  counter-reset: counter-name;
}

.section { position: relative; }

.section::before {
  counter-increment: counter-name;
  content: counter(counter-name);
  position: absolute;
  left: -2.5em;
  top: -.5em;
  background: white;
  width: 2em;
  height: 2em;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  border: 3px solid rgba(black, .7);
  color: rgba(black, .7);
  box-sizing: border-box;
}

/* Thisw will make the counter reset every time .counters is called*/

/* .counters {
    counter-reset: ordered-list;
} */

.counters ol {
  list-style: none;
  counter-reset: ordered-list;

}

.counters li::before {
  counter-increment: ordered-list;
  content: 'list item ' counter(ordered-list) ') ';
  font-size: .8em;
  color: red;
}